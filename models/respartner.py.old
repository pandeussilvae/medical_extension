# -*- coding: utf-8 -*-

from odoo import models, fields, api
from datetime import date

class MedicalPatientHistory(models.Model):
    _name = 'medical.patient.history'
    _description = 'Patient Admission History'

    patient_id = fields.Many2one('res.partner', string='Paziente', ondelete='cascade')
    admission_date = fields.Date(string='Data di Carico')
    discharge_date = fields.Date(string='Dimissioni')
    notes = fields.Text(string='Note')

class RelationType(models.Model):
    _name = 'patient.relation.type'
    _description = 'Tipo di Relazione'

    name = fields.Char(string='Name', required=True)
    code = fields.Char(string='Code')


class PatientRelation(models.Model):
    _name = 'patient.relation'
    _description = 'Crea la relazione tra il Paziente e gli altri Contatti'

    main_model_id = fields.Many2one('res.partner', string='Paziente', required=True, ondelete='cascade')
    contact_id = fields.Many2one('res.partner', string='Contatto Relazione', required=True, ondelete='cascade')
    relation_type_id = fields.Many2one('relation.type', string='Relation Type', required=True)

class PatientDiagnosis(models.Model):
    _name = 'patient.diagnosis'
    _description = 'Diagnosi del Paziente'

    name = fields.Char(string='Diagnosi', required=True)
    severity = fields.Selection([
        ('low', 'Basso'),
        ('medium', 'Medio'),
        ('high', 'Alto')
    ], string='Gravità', required=True)

class PatientDiagnosisRelation(models.Model):
    _inherit = 'patient.diagnosis'

    patient_diag_id = fields.Many2one('res.partner', string='Paziente', required=True, ondelete='cascade')

class MedicalPartnerExtraType(models.Model):
    _name = 'medical.partner.extra.type'
    _description = 'Informazioni Aggiuntive del Contatto su Tipologia'

    patient_type_id = fields.Many2one('res.partner', string='Paziente', required=True, ondelete='cascade')
    is_patient = fields.Boolean(string='Paziente')
    is_doctor = fields.Boolean(string='Medico')
    is_nurse = fields.Boolean(string='Infermiere')
    is_therapist = fields.Boolean(string='Terapista')

class MedicalPartnerExtraBirthData(models.Model):
    _name = 'medical.partner.extra.birth.data'
    _description = 'Informazioni Aggiuntive del Contatto su Data e Luogo di nascita'

    patient_all_birth_id = fields.Many2one('res.partner', string='Paziente', required=True, ondelete='cascade')
    # Modificato per fare riferimento ai campi esistenti nel modulo partner_contact_birthplace
    patient_birthplace = fields.Char(related='birth_city', string='Città di nascita', readonly=True)
    patient_birth_state_id = fields.Many2one(related='birth_state_id', comodel_name="res.country.state", string='Provincia di nascita', readonly=True)
    patient_birth_country_id = fields.Many2one(related='birth_country_id', comodel_name="res.country", string='Stato di nascita', readonly=True)


    patient_birthdate = fields.Date(related='birthdate_date', string='Data di nascita', readonly=False)
    patient_age = fields.Integer(related='age', string='Età')

#    patient_age = fields.Integer(compute='_compute_patient_age', string='Età', store=True)

#    @api.depends('patient_birthdate')
#    def _compute_patient_age(self):
#        for record in self:
#            if record.patient_birthdate:
#                today = date.today()
#                birthdate = record.patient_birthdate
#                record.patient_age = today.year - birthdate.year - ((today.month, today.day) < (birthdate.month, birthdate.day))
#            else:
#                record.patient_age = 0
                
class ResPartner(models.Model):
    _inherit = "res.partner"

    medical_contact_type = fields.One2many('medical.partner.extra.type', 'patient_type_id', string='Tipo di contatto Sanitario')

    patient_all_birth_data = fields.One2many('medical.partner.extra.birth.data', 'patient_all_birth_id', string='Dati di nascita paziente')

    patient_relations = fields.One2many('patient.relation', 'main_model_id', string='Relazioni Paziente')

    patient_diagnosis_ids = fields.One2many('patient.diagnosis', 'patient_diag_id', string='Diagnosi del Paziente')

#    admission_date = fields.Date(string='Data di Carico')
#    discharge_date = fields.Date(string='Dimissioni')
#    history_ids = fields.One2many('patient.history', 'patient_id', string='Storico')
